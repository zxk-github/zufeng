什么是面向对象
把客观对象抽象成属性数据和对数数据的相关操作，把内部细节和不相关的信息隐藏起来
把同一类型的客观对象的属性数据和操作绑定在一起，封装成类
并且允许分成不同层次进行抽象，通过继承实现属性和操作的共享
    面向对象分析 ooa
    面向对象设计 ood
    面向对象编程 oop

面向对象三种特性 封装 继承 多态

封装 
    把数据封装起来
    减少耦合，不该外部访问的不让外部访问
    利用数据的接口权限管理
    ES6目前不支持，一般默认_开头的为私有，外面不能使用
  实现 ts支持
    public 共有，可以在类的内部和外部使用public修饰的属性和行文
    protected 可以在本类和子类中使用protected修饰的属性和行为
    private 只能在当前类的内部使用

继承 子类继承父类

多态 说白了就是子类可以覆盖父类的同名属性和方法
    同一个接口可以有不同的实现
    保持子类的开放和灵活性
    面向接口编程


设计原则

什么是设计
    按哪一种思路或者标准来实现功能
    功能相同，可以有不同设计的方式
    需求如果不断变化，设计的作用才能体现出来

solid 原则

s 单一职责原则 单一功能原则认为对象应该有一种单一功能的概念
single responsibility principle 
一个程序只做好一件事
如果功能特别复杂就进行拆分

o 开放封闭原则 对扩展开放 对修改关闭

l 里氏替换原则
子类能覆盖父类
父类能出现的地方子类就能出现
这种设计模式要求后端返回的数据格式统一

i 接口隔离原则
保持单一独立，类似单一原则

d 依赖倒置原则
面向接口编程，依赖于抽象不依赖于具体实现
使用方只关注接口，而不关注具体类的实现

设计模式

UML 统一建模语言 unified modeling language
建设大楼首先会设计图纸

类图和对象图
类之间的关系：依赖，继承，实现，关联，聚合和组合

依赖关系
只要在类中使用到对方，那么他们就存在依赖关系，如果没有对方，那么就编译不通过

继承关系






工厂模式
1.简单工厂

错误监控： window.on(error)







